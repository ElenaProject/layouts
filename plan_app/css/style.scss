// @import url(./normalize.css);
// @import url("https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;700&family=Roboto:wght@400;500;700&display=swap");

// === PLACEHOLDERS ===
%list {
  list-style: none;
  margin: 0;
  padding: 0;
}

%btn {
  // позволяет задать вертик внутр отступы + ширина по содержанию
  display: inline-block;
  margin: 0;
  padding: 0;
  // ключаем принудительное наследование шрифта
  font: inherit;
  // убирает подчеркивание у ссылок
  text-decoration: none;
  background-color: transparent;
  // рамка у кнопок
  border: 1px solid transparent;
  cursor: pointer;
}
// === / PLACEHOLDERS ===

// === FUNCTIONS ===

// т.к. р-ры могут быть в разных ед измерения
// сначала получаем множитель без единиц измерения (н-р 16px -> 16)

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// переводим р-р в rem (при базовом р-ре 16)
@function calcRem($num) {
  @return (strip-unit($num) / 16) * 1rem;
}
// оборачиваем все наши размеры в переменных в эту функцию - получаем р-ры в rem
// теперь при изменении font-size для html - все размеры автоматич пересчитаются

// === / FUNCTIONS ===

// === VARIABLES ===
$base: calcRem(4px);

// Font-weight
$fw-light: 300;
$fw-regular: 400;
$fw-medium: 500;
$fw-bold: 700;

// Font-size
$fz-xxs: calcRem(10px);
$fz-xs: calcRem(12px);
$fz-s: calcRem(15px);
$fz-m: calcRem(18px);
$fz-l: calcRem(24px);
$fz-xl: calcRem(36px);
$fz-xxl: calcRem(48px);

$transition: 0.5s;

// Colors
$color-white: #ffffff;
// Blue
$color-light-blue: #d8e3fe;
$color-logo: #5e81fe;
$color-title: #3d4f9f;
// Grey
$color-bg-grey: #e8ecf4;
$color-logo-grey: #d6dae5;
$color-text: #8d96bd;
$color-dark-grey: #757e9a;
$color-grey-blog: #a8b4e5;

// Breakpoints
$breakpoints: (
  xs: 400px,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

// === / VARIABLES ===

// === MIXINS ===
@mixin quicksand {
  font-family: "Quicksand", sans-serif;
}
@mixin roboto {
  font-family: "Roboto", sans-serif;
}

// Breakpoints
@mixin breakpoint-min($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin breakpoint-max($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: (#{map-get($breakpoints, $breakpoint) - 1px})) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

// === / MIXINS ===

// === COMMON ===

body {
  @include roboto;
  color: $color-text;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 1px solid transparent;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(100%);
}

.section-outer {
  border-bottom: 1px solid $color-light-blue;
}
.section-inner {
  max-width: 900px;
  margin: 0 auto;
  padding: 0 $base * 5;

  &--wide {
    max-width: 1200px;
  }
}

.vertical-indent {
  @mixin vertical-indent($size) {
    padding-top: $size;
    padding-bottom: $size;
  }

  &--s {
    @include vertical-indent($base * 5);
  }

  &--m {
    @include vertical-indent($base * 15);
  }

  &--l {
    @include vertical-indent($base * 30);
  }

  &--xl {
    @include vertical-indent($base * 53);
  }

  @include breakpoint-max(lg) {
    &--m {
      @include vertical-indent($base * 10);
    }

    &--l {
      @include vertical-indent($base * 20);
    }

    &--xl {
      @include vertical-indent($base * 30);
    }
  }

  @include breakpoint-max(md) {
    &--xl {
      @include vertical-indent($base * 25);
    }
  }

  @include breakpoint-max(sm) {
    &--l {
      @include vertical-indent($base * 10);
    }

    &--xl {
      @include vertical-indent($base * 20);
    }
  }

  @include breakpoint-max(xs) {
    &--xl {
      @include vertical-indent($base * 15);
    }
  }
}

//  Buttons

.btn {
  @extend %btn;
  @include quicksand;

  padding: $base * 3 $base * 4;
  font-size: $fz-xs;
  font-weight: $fw-bold;
  border-radius: $base/2;
  outline-color: $color-title;
  transition: $transition;

  &[class*="primary"] {
    box-sizing: border-box;
    width: $base * 28;
    padding: $base * 3 $base * 2;
    text-align: center;
    word-wrap: break-word;
  }

  &--primary--blue {
    color: $color-logo;
    background-color: $color-light-blue;

    &:hover {
      background-color: darken($color-light-blue, 5%);
    }
  }

  &--primary--pink {
    color: #d43f3f;
    background-color: #ffd7d7;

    &:hover {
      background-color: darken(#ffd7d7, 5%);
    }
  }

  &--secondary {
    &--dark {
      padding-right: $base * 6;
      padding-left: $base * 6;
      color: $color-white;
      background-color: $color-logo;

      &:hover {
        background-color: darken($color-logo, 10%);
      }
    }

    &--light {
      padding-right: $base * 8;
      padding-left: $base * 8;
      color: $color-dark-grey;
      background-color: $color-white;

      &:hover {
        background-color: darken($color-white, 10%);
      }
    }
  }

  &--no-bg {
    padding-right: $base * 5;
    padding-left: $base * 5;
    color: $color-text;
    font-weight: $fw-medium;
    border: 1px solid $color-logo-grey;

    &:hover {
      color: darken($color-text, 10%);
      border: 1px solid darken($color-logo-grey, 10%);
    }
  }

  &--no-bg--light {
    padding-right: $base * 3;
    padding-left: $base * 3;
    color: $color-logo-grey;
    font-weight: $fw-medium;
    border: 1px solid $color-logo-grey;

    &:hover {
      color: $color-white;
      border: 1px solid $color-white;
    }
  }

  &--grey {
    padding: $base * 4 $base * 9;
    color: $color-text;
    background-color: $color-bg-grey;

    &:hover {
      background-color: darken($color-bg-grey, 10%);
    }
  }

  &-group {
    display: flex;

    .btn:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .btn:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}

// Input

.input {
  @include quicksand;

  padding: $base * 5 $base * 6;
  color: $color-text;
  font-size: $fz-xs;
  font-weight: $fw-bold;
  background-color: $color-bg-grey;
  border: 1px solid transparent;
  border-radius: $base * 1.25;
  outline-color: $color-title;

  &::placeholder {
    @include quicksand;

    color: $color-text;
    font-size: $fz-xs;
    font-weight: $fw-bold;
  }
}

// Headers

.title {
  @include roboto;

  margin: 0;
  padding: 0;
  color: $color-title;
  font-weight: $fw-medium;

  &--center {
    text-align: center;
  }

  &__section {
    margin-bottom: $base * 4;
    font-size: $fz-xxs;
    letter-spacing: 0.1em;
    text-transform: uppercase;
  }
}

.subtitle {
  @include quicksand();

  margin-bottom: $base * 7;
  font-size: $fz-l;

  &--medium {
    font-size: $fz-xl;
  }

  &--large {
    font-size: $fz-xxl;

    @include breakpoint-max(xs) {
      font-size: $base * 10;
    }
  }
  span {
    font-weight: $fw-light;
  }
}

.text {
  margin: 0;
  font-size: $fz-s;
  font-weight: $fw-regular;
  line-height: 2;
  letter-spacing: 0.03em;
}

.dots {
  @extend %list;

  display: flex;
  justify-content: center;

  &__item {
    width: $base * 2;
    height: $base * 2;
    cursor: pointer;
    background-color: $color-light-blue;
    border-radius: 50%;
    transition: $transition;

    &--active {
      background-color: $color-logo;
    }

    & + & {
      margin-left: $base * 3;
    }
  }
}

// === / COMMON ===

// === HEADER ===
@import "header";
// === / HEADER ===

// === HERO-IMAGE ===
@import "hero_image";
// === / HERO-IMAGE ===

// === CUSTOMERS ===
@import "customers";
// === / CUSTOMERS ===

// === APP-DEMO ===
@import "app-demo";
// === / APP-DEMO ===

// === FEATURES ===
@import "features";
// === / FEATURES ===

// === STATS ===
@import "stats";
// === / STATS ===

// === BLOG ===
@import "blog";
// === / BLOG ===

// === QUOTES ===
@import "quotes";
// === / QUOTES ===

// === FAQ ===
@import "faq";
// === / FAQ ===

// === START ===
@import "start";
// === / START ===

// === NEWSLETTER ===
@import "newsletter";
// === / NEWSLETTER ===

// === FOOTER ===
@import "footer";
// === / FOOTER ===
